
@mixin adminBox() {
  padding: 0;
  background-color: #fff;
  border: 0;
  border-right: $border-grey;
  border-bottom: $border-grey;
  // margin: 0 0 $distance 0;
  margin-bottom: $distance;
}

@mixin faIcon($name, $size: 1) {
  // Alternate way of displaying Font Awesome icons.
  // Used as a substitute to the standard, preferred way of <i class="fa fa-iconname"></i>
  // when this is not feasible (like when you can't control the markup).

  content: map-get($faIcons, $name);
  font: normal normal normal 14px/1 FontAwesome;
  font-size: map-get($faSizes, $size);
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform: translate(0,0);
}


@mixin transition($prop: all, $duration: 300ms, $addWebkitToProp: false, $easing: cubic-bezier(0.080, 0.360, 0.040, 1.000)) {
  @if $addWebkitToProp == true {
    -webkit-transition: -webkit-#{$prop} $duration $easing;
  } @else {
    -webkit-transition: $prop $duration $easing;
  }
  transition: $prop $duration $easing;
}

@mixin breakpoint($breakpoint, $value: null, $media: all) {
  //  @param string $breakpoint: Name of a pre-specified breakpoint, or an integer to be used for max-width (for lazy people)
  //  @param integer $value: If a variable breakpoint name is used, like "max-width", specify a value to which the breakpoint should respond to
  //  @param string $media: Apply only to a specific media type
  //  Move the "or" statement with "main-desktop-breakpoint" to where you want the main breakpoint to be, if you have one

  @if $breakpoint == 'mobile-small' {
    @media only #{$media} and (max-width: 320px) {
      @content;
    }
  } @else if $breakpoint == 'mobile-large' {
    @media only #{$media} and (min-width: 414px) {
      @content;
    }
  } @else if $breakpoint == 'mobile-huge' {
    @media only #{$media} and (min-width: 600px) {
      @content;
    }
  } @else if $breakpoint == 'tablet-portrait' {
    @media only #{$media} and (min-width: 768px) {
      @content;
    }
  } @else if $breakpoint == 'desktop' {
    @media only #{$media} and (min-width: 1000px) {
      @content;
    }
  } @else if $breakpoint == 'desktop-wide' {
    @media only #{$media} and (min-width: 1200px) {
      @content;
    }
  } @else if $breakpoint == 'laptop-height' {
    @media only #{$media} and (min-width: 600px) and (max-height: 820px) {
      @content;
    }
  } @else if $breakpoint == 'device-touch' {
    @media only #{$media} and (min-device-width: 320px) and (max-device-width: 1024px) {
      @content;
    }
  } @else if $breakpoint == 'device-notouch' {
    @media only #{$media} and (min-device-width: 1025px) {
      @content;
    }
  } @else if $breakpoint == 'max-width' {
    @media only #{$media} and (max-width: $value) {
      @content;
    }
  } @else if $breakpoint == 'min-width' {
    @media only #{$media} and (min-width: $value) {
      @content;
    }
  } @else if $breakpoint == 'max-height' {
    @media only #{$media} and (max-height: $value) {
      @content;
    }
  } @else if $breakpoint == 'min-height' {
    @media only #{$media} and (min-height: $value) {
      @content;
    }
  } @else {
    @media only #{$media} and (max-width: $breakpoint) {
      @content;
    }
  }
}