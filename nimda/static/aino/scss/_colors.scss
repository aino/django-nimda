/* 	————————————————————————————————————————————————
	 Colors
	———————————————————————————————————————————————— */
/* Definitions */
$color-steel: #7a8ba0;
$color-steel-light: #c4cdd8;
$color-blue: #479eff;
$color-graphite: #4c4c4c;
$color-sand: #F5E9CC;
$color-sand-dark: #A09480;
$color-red: #f04444;
$color-red-dark: #d31d1d;
$color-red-darker: #822121;
$color-green-light: #e1f1c6;
$color-green-darker: #6e8742;

/* Semantic Aliases */
$color-site: $color-graphite;
$color-sidekick: $color-sand;
$color-hero: $color-blue;
$color-destroy: $color-red;


$colors: (
  'grey': (
    1: #fdfdfd,
    2: #f8f8f8,
    3: #e7e7e7,
    4: #ccc,
    5: #b5b5b5,
    6: #9a9a9a,
    7: #767676,
    8: #353535,
    9: #1f1f1f
  ),
  'brand': (
    1: red,
    2: blue,
    3: green
  )
);

@function color($base: 'grey', $tone: 5) {
  // Expectations: A map called $colors and map-deep-get function
  // @param string $base: The base color to use inside an expected global map called $colors
  // @param string $tone: The tone value of the base color
  @if map-deep-get($colors, $base, $tone) {
    @return map-deep-get($colors, $base, $tone);
  }
  @warn "Did not find any matching color";
  @return red;
}
